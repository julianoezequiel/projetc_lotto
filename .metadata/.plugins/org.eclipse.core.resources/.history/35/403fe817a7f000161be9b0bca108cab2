/**
 * 
 */
package br.com.lotto.service;

import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import br.com.lotto.dao.MegaSenaRepository;
import br.com.lotto.entity.Megasena;
import br.com.lotto.entity.Numero;

/**
 * @author Juliano
 *
 */
@Service
public class MegaSenaService {

	@Autowired
	private MegaSenaRepository megaSenaRepository;
	
	@Autowired
	private NumeroService numeroService;

	public Collection<Megasena> buscartodos() {
		return this.megaSenaRepository.findAll();
	}

	public Megasena buscarPorId(Integer id) {
		return this.megaSenaRepository.findOne(id);
	}

	public HashMap<Integer, Long> buscarFrequencias() {
		//List<Megasena> listaConcursos = (List<Megasena>) this.buscartodos();
		List<Numero> numerosList = (List<Numero>) this.numeroService.buscarTodos();
		
		HashMap<Integer, Long> mapCount = new HashMap<>();
		AtomicInteger count = new AtomicInteger(1);
		/*for (; count.get() <= 60; count.incrementAndGet()) {
			Long l = listaConcursos.stream().filter(c -> c.getNumero1().getIdNumero() == count.get()
					|| c.getNumero2().getIdNumero() == count.get() || c.getNumero3().getIdNumero() == count.get()
					|| c.getNumero4().getIdNumero() == count.get() || c.getNumero5().getIdNumero() == count.get()
					|| c.getNumero6().getIdNumero() == count.get()).count();
			mapCount.put(count.get(), l);

		}*/

		return mapCount;
	}

}
