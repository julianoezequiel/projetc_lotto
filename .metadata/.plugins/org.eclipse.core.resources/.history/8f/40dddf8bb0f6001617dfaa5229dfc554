package br.com.lotto.service.validacoes;

import java.util.Collection;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import br.com.lotto.dto.Jogos;
import br.com.lotto.dto.frequenciaDTO;
import br.com.lotto.service.analize.FrequenciaAnalizeService;

@Service
public class FrequenciaValidacaoService {

	@Autowired
	private FrequenciaAnalizeService frequenciaAnalizeservice;

	private Jogos jogo;
	
	public Boolean validarQtdfrequencia(Integer qtd, Jogos jogos) {
		this.jogo = jogos;
		Collection<frequenciaDTO> topFrequencia = getTopFrequecia(qtd);
		AtomicBoolean valido = new AtomicBoolean(false);
		topFrequencia.stream().map(fr -> fr.getNumero()).forEach(fre -> {
			
			this.jogo.getNumeros().stream().map(jg->jg.getIdnumero()).filter(jg2->{
				return jg2.equals(fre.intValue());
			});
			
		});

		return valido.get();

	}

	public Collection<frequenciaDTO> getTopFrequecia(Integer qtd) {
		Collection<frequenciaDTO> frequencialist = this.frequenciaAnalizeservice.buscarFrequencias();
		return frequencialist.stream().skip(qtd).limit(frequencialist.size()).collect(Collectors.toList());
	}

}
