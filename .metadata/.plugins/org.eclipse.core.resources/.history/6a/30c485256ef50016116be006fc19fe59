/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.lotto.entity;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

import com.fasterxml.jackson.annotation.JsonIgnore;

import br.com.lotto.dto.MegaSenaDTO;
import br.com.lotto.dto.NumeroDTO;

/**
 *
 * @author Juliano
 */
@Entity
@Table(name = "megasena")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "Megasena.findAll", query = "SELECT m FROM Megasena m")
    , @NamedQuery(name = "Megasena.findByIdConcurso", query = "SELECT m FROM Megasena m WHERE m.idConcurso = :idConcurso")
    , @NamedQuery(name = "Megasena.findByConcurso", query = "SELECT m FROM Megasena m WHERE m.concurso = :concurso")
    , @NamedQuery(name = "Megasena.findByDataSorteio", query = "SELECT m FROM Megasena m WHERE m.dataSorteio = :dataSorteio")
    , @NamedQuery(name = "Megasena.findByArrecadacaoTotal", query = "SELECT m FROM Megasena m WHERE m.arrecadacaoTotal = :arrecadacaoTotal")
    , @NamedQuery(name = "Megasena.findByGanhadoresSena", query = "SELECT m FROM Megasena m WHERE m.ganhadoresSena = :ganhadoresSena")
    , @NamedQuery(name = "Megasena.findByCidade", query = "SELECT m FROM Megasena m WHERE m.cidade = :cidade")
    , @NamedQuery(name = "Megasena.findByUf", query = "SELECT m FROM Megasena m WHERE m.uf = :uf")
    , @NamedQuery(name = "Megasena.findByRateioSena", query = "SELECT m FROM Megasena m WHERE m.rateioSena = :rateioSena")
    , @NamedQuery(name = "Megasena.findByGanhadoresQuina", query = "SELECT m FROM Megasena m WHERE m.ganhadoresQuina = :ganhadoresQuina")
    , @NamedQuery(name = "Megasena.findByRateioQuina", query = "SELECT m FROM Megasena m WHERE m.rateioQuina = :rateioQuina")
    , @NamedQuery(name = "Megasena.findByGanhadoresQuadra", query = "SELECT m FROM Megasena m WHERE m.ganhadoresQuadra = :ganhadoresQuadra")
    , @NamedQuery(name = "Megasena.findByRateioQuadra", query = "SELECT m FROM Megasena m WHERE m.rateioQuadra = :rateioQuadra")
    , @NamedQuery(name = "Megasena.findByAcumulado", query = "SELECT m FROM Megasena m WHERE m.acumulado = :acumulado")
    , @NamedQuery(name = "Megasena.findByValorAcumulado", query = "SELECT m FROM Megasena m WHERE m.valorAcumulado = :valorAcumulado")
    , @NamedQuery(name = "Megasena.findByEstimativaPremio", query = "SELECT m FROM Megasena m WHERE m.estimativaPremio = :estimativaPremio")
    , @NamedQuery(name = "Megasena.findByAcumuladoMegadaVirada", query = "SELECT m FROM Megasena m WHERE m.acumuladoMegadaVirada = :acumuladoMegadaVirada")})
public class Megasena implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @Basic(optional = false)
    @NotNull
    @Column(name = "id_concurso")
    private Integer idConcurso;
    @Column(name = "concurso")
    private Integer concurso;
    @Column(name = "data_sorteio")
    @Temporal(TemporalType.DATE)
    private Date dataSorteio;
    @Size(max = 45)
    @Column(name = "Arrecadacao_Total")
    private String arrecadacaoTotal;
    @Column(name = "Ganhadores_Sena")
    private Integer ganhadoresSena;
    @Size(max = 400)
    @Column(name = "Cidade")
    private String cidade;
    @Size(max = 200)
    @Column(name = "UF")
    private String uf;
    // @Max(value=?)  @Min(value=?)//if you know range of your decimal fields consider using these annotations to enforce field validation
    @Column(name = "Rateio_Sena")
    private BigDecimal rateioSena;
    @Column(name = "Ganhadores_Quina")
    private Integer ganhadoresQuina;
    @Column(name = "Rateio_Quina")
    private BigDecimal rateioQuina;
    @Column(name = "Ganhadores_Quadra")
    private Integer ganhadoresQuadra;
    @Column(name = "Rateio_Quadra")
    private BigDecimal rateioQuadra;
    @Column(name = "Acumulado")
    private Boolean acumulado;
    @Column(name = "Valor_Acumulado")
    private BigDecimal valorAcumulado;
    @Column(name = "Estimativa_Premio")
    private BigDecimal estimativaPremio;
    @Column(name = "Acumulado_Mega_da_Virada")
    private BigDecimal acumuladoMegadaVirada;
    
    @JoinTable(name = "numeromegasena", joinColumns = {
        @JoinColumn(name = "MegaSena_id_concurso", referencedColumnName = "id_concurso")}, inverseJoinColumns = {
        @JoinColumn(name = "Numero_id_numero", referencedColumnName = "id_numero")})
    @ManyToMany
    @JsonIgnore
    private Collection<Numero> numeroCollection;
    
    @OneToMany(mappedBy = "concursoidConcurso")
    @JsonIgnore
    private Collection<Tipo> tipoCollection;
    @OneToMany(mappedBy = "megaSenaidconcurso")
    @JsonIgnore
    private Collection<Palpite> palpiteCollection;

    public Megasena() {
    }

    public Megasena(Integer idConcurso) {
        this.idConcurso = idConcurso;
    }

    public Integer getIdConcurso() {
        return idConcurso;
    }

    public void setIdConcurso(Integer idConcurso) {
        this.idConcurso = idConcurso;
    }

    public Integer getConcurso() {
        return concurso;
    }

    public void setConcurso(Integer concurso) {
        this.concurso = concurso;
    }

    public Date getDataSorteio() {
        return dataSorteio;
    }

    public void setDataSorteio(Date dataSorteio) {
        this.dataSorteio = dataSorteio;
    }

    public String getArrecadacaoTotal() {
        return arrecadacaoTotal;
    }

    public void setArrecadacaoTotal(String arrecadacaoTotal) {
        this.arrecadacaoTotal = arrecadacaoTotal;
    }

    public Integer getGanhadoresSena() {
        return ganhadoresSena;
    }

    public void setGanhadoresSena(Integer ganhadoresSena) {
        this.ganhadoresSena = ganhadoresSena;
    }

    public String getCidade() {
        return cidade;
    }

    public void setCidade(String cidade) {
        this.cidade = cidade;
    }

    public String getUf() {
        return uf;
    }

    public void setUf(String uf) {
        this.uf = uf;
    }

    public BigDecimal getRateioSena() {
        return rateioSena;
    }

    public void setRateioSena(BigDecimal rateioSena) {
        this.rateioSena = rateioSena;
    }

    public Integer getGanhadoresQuina() {
        return ganhadoresQuina;
    }

    public void setGanhadoresQuina(Integer ganhadoresQuina) {
        this.ganhadoresQuina = ganhadoresQuina;
    }

    public BigDecimal getRateioQuina() {
        return rateioQuina;
    }

    public void setRateioQuina(BigDecimal rateioQuina) {
        this.rateioQuina = rateioQuina;
    }

    public Integer getGanhadoresQuadra() {
        return ganhadoresQuadra;
    }

    public void setGanhadoresQuadra(Integer ganhadoresQuadra) {
        this.ganhadoresQuadra = ganhadoresQuadra;
    }

    public BigDecimal getRateioQuadra() {
        return rateioQuadra;
    }

    public void setRateioQuadra(BigDecimal rateioQuadra) {
        this.rateioQuadra = rateioQuadra;
    }

    public Boolean getAcumulado() {
        return acumulado;
    }

    public void setAcumulado(Boolean acumulado) {
        this.acumulado = acumulado;
    }

    public BigDecimal getValorAcumulado() {
        return valorAcumulado;
    }

    public void setValorAcumulado(BigDecimal valorAcumulado) {
        this.valorAcumulado = valorAcumulado;
    }

    public BigDecimal getEstimativaPremio() {
        return estimativaPremio;
    }

    public void setEstimativaPremio(BigDecimal estimativaPremio) {
        this.estimativaPremio = estimativaPremio;
    }

    public BigDecimal getAcumuladoMegadaVirada() {
        return acumuladoMegadaVirada;
    }

    public void setAcumuladoMegadaVirada(BigDecimal acumuladoMegadaVirada) {
        this.acumuladoMegadaVirada = acumuladoMegadaVirada;
    }

    @XmlTransient
    public Collection<Numero> getNumeroCollection() {
        return numeroCollection;
    }

    public void setNumeroCollection(Collection<Numero> numeroCollection) {
        this.numeroCollection = numeroCollection;
    }

    @XmlTransient
    public Collection<Tipo> getTipoCollection() {
        return tipoCollection;
    }

    public void setTipoCollection(Collection<Tipo> tipoCollection) {
        this.tipoCollection = tipoCollection;
    }

    @XmlTransient
    public Collection<Palpite> getPalpiteCollection() {
        return palpiteCollection;
    }

    public void setPalpiteCollection(Collection<Palpite> palpiteCollection) {
        this.palpiteCollection = palpiteCollection;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (idConcurso != null ? idConcurso.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Megasena)) {
            return false;
        }
        Megasena other = (Megasena) object;
        if ((this.idConcurso == null && other.idConcurso != null) || (this.idConcurso != null && !this.idConcurso.equals(other.idConcurso))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "br.com.lotto.entity.Megasena[ idConcurso=" + idConcurso + " ]";
    }
    
    public MegaSenaDTO toMegaSenaDTO(){
    	MegaSenaDTO dto = new MegaSenaDTO();
    	dto.setAcumulado(acumulado);
    	dto.setAcumuladoMegadaVirada(acumuladoMegadaVirada);
    	dto.setArrecadacaoTotal(arrecadacaoTotal);
    	dto.setCidade(cidade);
    	dto.setConcurso(concurso);
    	dto.setDataSorteio(dataSorteio);
    	dto.setEstimativaPremio(estimativaPremio);
    	dto.setGanhadoresQuadra(ganhadoresQuadra);
    	dto.setGanhadoresQuina(ganhadoresQuina);
    	dto.setGanhadoresSena(ganhadoresSena);
    	Collection<NumeroDTO> numeroDTOList = new ArrayList<>();
    	numeroCollection.stream().forEach(n->{
    		numeroDTOList.add(n.toNumeroDTO());
    	});
    	dto.setNumeroCollection(numeroDTOList);
    	dto.setRateioQuadra(rateioQuadra);
    	dto.setRateioQuina(rateioQuina);
    	dto.setRateioSena(rateioSena);
    	dto.setUf(uf);
    	dto.setValorAcumulado(valorAcumulado);
    	return dto;		
    	
    }
    
}
