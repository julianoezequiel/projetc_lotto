package model;

import java.io.Serializable;
import javax.persistence.*;
import java.util.List;


/**
 * The persistent class for the numero database table.
 * 
 */
@Entity
@NamedQuery(name="Numero.findAll", query="SELECT n FROM Numero n")
public class Numero implements Serializable {
	private static final long serialVersionUID = 1L;
	private int idNumero;
	private String descricao;
	private String extenso;
	private int num;
	private List<Palpite> palpites;
	private List<LotoFacil> lotoFacils;
	private List<Megasena> megasenas1;
	private List<Megasena> megasenas2;
	private List<Megasena> megasenas3;
	private List<Megasena> megasenas4;
	private List<Megasena> megasenas5;
	private List<Megasena> megasenas6;

	public Numero() {
	}


	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name="id_numero")
	public int getIdNumero() {
		return this.idNumero;
	}

	public void setIdNumero(int idNumero) {
		this.idNumero = idNumero;
	}


	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}


	public String getExtenso() {
		return this.extenso;
	}

	public void setExtenso(String extenso) {
		this.extenso = extenso;
	}


	public int getNum() {
		return this.num;
	}

	public void setNum(int num) {
		this.num = num;
	}


	//bi-directional many-to-one association to Palpite
	@OneToMany(mappedBy="numero")
	public List<Palpite> getPalpites() {
		return this.palpites;
	}

	public void setPalpites(List<Palpite> palpites) {
		this.palpites = palpites;
	}

	public Palpite addPalpite(Palpite palpite) {
		getPalpites().add(palpite);
		palpite.setNumero(this);

		return palpite;
	}

	public Palpite removePalpite(Palpite palpite) {
		getPalpites().remove(palpite);
		palpite.setNumero(null);

		return palpite;
	}


	//bi-directional many-to-one association to LotoFacil
	@OneToMany(mappedBy="numero")
	public List<LotoFacil> getLotoFacils() {
		return this.lotoFacils;
	}

	public void setLotoFacils(List<LotoFacil> lotoFacils) {
		this.lotoFacils = lotoFacils;
	}

	public LotoFacil addLotoFacil(LotoFacil lotoFacil) {
		getLotoFacils().add(lotoFacil);
		lotoFacil.setNumero(this);

		return lotoFacil;
	}

	public LotoFacil removeLotoFacil(LotoFacil lotoFacil) {
		getLotoFacils().remove(lotoFacil);
		lotoFacil.setNumero(null);

		return lotoFacil;
	}


	//bi-directional many-to-one association to Megasena
	@OneToMany(mappedBy="numero1")
	public List<Megasena> getMegasenas1() {
		return this.megasenas1;
	}

	public void setMegasenas1(List<Megasena> megasenas1) {
		this.megasenas1 = megasenas1;
	}

	public Megasena addMegasenas1(Megasena megasenas1) {
		getMegasenas1().add(megasenas1);
		megasenas1.setNumero1(this);

		return megasenas1;
	}

	public Megasena removeMegasenas1(Megasena megasenas1) {
		getMegasenas1().remove(megasenas1);
		megasenas1.setNumero1(null);

		return megasenas1;
	}


	//bi-directional many-to-one association to Megasena
	@OneToMany(mappedBy="numero2")
	public List<Megasena> getMegasenas2() {
		return this.megasenas2;
	}

	public void setMegasenas2(List<Megasena> megasenas2) {
		this.megasenas2 = megasenas2;
	}

	public Megasena addMegasenas2(Megasena megasenas2) {
		getMegasenas2().add(megasenas2);
		megasenas2.setNumero2(this);

		return megasenas2;
	}

	public Megasena removeMegasenas2(Megasena megasenas2) {
		getMegasenas2().remove(megasenas2);
		megasenas2.setNumero2(null);

		return megasenas2;
	}


	//bi-directional many-to-one association to Megasena
	@OneToMany(mappedBy="numero3")
	public List<Megasena> getMegasenas3() {
		return this.megasenas3;
	}

	public void setMegasenas3(List<Megasena> megasenas3) {
		this.megasenas3 = megasenas3;
	}

	public Megasena addMegasenas3(Megasena megasenas3) {
		getMegasenas3().add(megasenas3);
		megasenas3.setNumero3(this);

		return megasenas3;
	}

	public Megasena removeMegasenas3(Megasena megasenas3) {
		getMegasenas3().remove(megasenas3);
		megasenas3.setNumero3(null);

		return megasenas3;
	}


	//bi-directional many-to-one association to Megasena
	@OneToMany(mappedBy="numero4")
	public List<Megasena> getMegasenas4() {
		return this.megasenas4;
	}

	public void setMegasenas4(List<Megasena> megasenas4) {
		this.megasenas4 = megasenas4;
	}

	public Megasena addMegasenas4(Megasena megasenas4) {
		getMegasenas4().add(megasenas4);
		megasenas4.setNumero4(this);

		return megasenas4;
	}

	public Megasena removeMegasenas4(Megasena megasenas4) {
		getMegasenas4().remove(megasenas4);
		megasenas4.setNumero4(null);

		return megasenas4;
	}


	//bi-directional many-to-one association to Megasena
	@OneToMany(mappedBy="numero5")
	public List<Megasena> getMegasenas5() {
		return this.megasenas5;
	}

	public void setMegasenas5(List<Megasena> megasenas5) {
		this.megasenas5 = megasenas5;
	}

	public Megasena addMegasenas5(Megasena megasenas5) {
		getMegasenas5().add(megasenas5);
		megasenas5.setNumero5(this);

		return megasenas5;
	}

	public Megasena removeMegasenas5(Megasena megasenas5) {
		getMegasenas5().remove(megasenas5);
		megasenas5.setNumero5(null);

		return megasenas5;
	}


	//bi-directional many-to-one association to Megasena
	@OneToMany(mappedBy="numero6")
	public List<Megasena> getMegasenas6() {
		return this.megasenas6;
	}

	public void setMegasenas6(List<Megasena> megasenas6) {
		this.megasenas6 = megasenas6;
	}

	public Megasena addMegasenas6(Megasena megasenas6) {
		getMegasenas6().add(megasenas6);
		megasenas6.setNumero6(this);

		return megasenas6;
	}

	public Megasena removeMegasenas6(Megasena megasenas6) {
		getMegasenas6().remove(megasenas6);
		megasenas6.setNumero6(null);

		return megasenas6;
	}

}