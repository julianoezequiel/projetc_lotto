package br.com.lotto.service.analize;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import br.com.lotto.dao.MegaSenaRepository;
import br.com.lotto.dto.frequenciaDTO;

@Service
public class FrequenciaAnalizeService {

	@Autowired
	private MegaSenaRepository megaSenaRepository;
	
	/**
	 * Calcula quantas vezes cada dezena ja foi sorteada
	 * 
	 * @return
	 */
	public Collection<frequenciaDTO> buscarFrequencias(Boolean ordenarNumero, Boolean ordenarFrequencia) {

		Collection<frequenciaDTO> frequencias = new ArrayList<>();
		int count = 0;
		Object[] objFreq = this.megaSenaRepository.getFrequencia();

		if (objFreq.length > 0) {
			for (; count < objFreq.length; count++) {
				Object[] itemFrequencia = (Object[]) objFreq[count];
				frequencias.add(new frequenciaDTO((Integer) itemFrequencia[0], (BigInteger) itemFrequencia[1]));

			}
		}
		if(ordenarNumero != null && ordenarNumero){
			return frequencias.stream().sorted(Comparator.comparing(frequenciaDTO::getNumero)).collect(Collectors.toList());
		}else if(ordenarFrequencia != null && ordenarFrequencia){
			return frequencias.stream().sorted(Comparator.comparing(frequenciaDTO::getFrequencia)).collect(Collectors.toList());
		}else{
			return frequencias;
		}
	
	}
	
	public Collection<frequenciaDTO> buscarFrequencias(){
		return this.buscarFrequencias(null, true);
	}
}
